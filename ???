import datetime

import pyray
from raylib import colors
from PIL import Image

def main():
    # Инициализация сцены 1 (game)-----------------------------------------------------------------------------------
    get_texture(16,3, 5)
    ball_image = pyray.load_image('test.png')
    ball_texture = pyray.load_texture_from_image(ball_image)
    pyray.unload_image(ball_image)
    del ball_image
    # Инициализация сцены 2 (gameover)--------------------------------------------
    max_wait_seconds = 3
    wait_seconds = 0
    gameover_text_format = 'Game over ({}/{})'.format('{}', max_wait_seconds)
    open_scene_datetime = datetime.datetime.now()

    # Основной цикл программы
    while not pyray.window_should_close():
            elif scene_index == 2:  # gameover-------------------------------------------------------------------
                open_scene_datetime = datetime.datetime.now()
        # Обработка логики работы сцен (при каждом кадре)
        if not scene_changed:
            if scene_index == 0:  # menu
                motion_now = datetime.datetime.now()
                delta = (motion_now - motion_start)
                ms = delta.seconds * 1000000 + delta.microseconds
                percent_completed = min(1.0, ms / (motion_seconds * 1000000))
                # Переключение сцен при достижении нужного количества коллизий
                if collision_count == max_collision_count:
                    scene_changed = True
                    scene_index = 2

            elif scene_index == 2:  # gameover----------------------------------------
                now = datetime.datetime.now()
                wait_seconds = (now - open_scene_datetime).seconds

                # Переключение сцен при достижении нужного количества секунд (микросекунд)
                if wait_seconds == max_wait_seconds:
                    scene_changed = True
                    scene_index = 0

        # Обработка отрисовки различных сцен (при каждом кадре)---------------------------------------------
        if not scene_changed:
            pyray.begin_drawing()
            pyray.clear_background(background_color)
            elif scene_index == 1:  # game
                pyray.draw_texture_v(ball_texture, ball_0_position, colors.WHITE)
                pyray.draw_texture_v(ball_texture, ball_1_position, colors.WHITE)
                pyray.draw_texture_v(ball_texture, ball_2_position, colors.WHITE)
                pyray.draw_text(collision_text_format.format(collision_count), 10, 10, 78, colors.WHITE)
            elif scene_index == 2:  # gameover----------------------------------------------
                pyray.draw_text(gameover_text_format.format(wait_seconds), 100, 250, 78, colors.BLUE)

            pyray.end_drawing()

    pyray.unload_texture(ball_texture)
    pyray.close_window()
    exit(0)


def get_texture(xs, ys, imgtype):
    #1-pacman13x13 расст3 x+2y+1
    # 2-pacmandie15x15? расст1 x+49y+1
    # 3-ghost14х14 расст2 x+2y+65
    # 4(нереализовано) 16x7 расст0 x+1y+133
    # 5(нереализовано) 8x8 расст1 x0y0
    if(imgtype == 5):
        r = 1
        rx = 8
        ry = 8
        stx = 0
        sty = 0
    elif(imgtype == 1):
        r = 3
        rx = 13
        ry = 13
        stx = 2
        sty = 1
    elif(imgtype == 2):
        r = 1
        rx = 15
        ry = 15
        stx = 49
        sty = 1
    else:
        r = 2
        rx = 14
        ry = 14
        stx = 2
        sty = 65
    if(imgtype == 5):
        image = Image.open('maze.png')
    else:
        image = Image.open('pacman.png')
    image = image.convert('RGBA')
    pixels = image.load()
    selected_pixels = [pixels[x, y] for x in range((xs-1)*rx + stx + r * (xs-1), rx*xs + stx + r * (xs-1)) for y in range((ys-1)*ry + sty + r * (ys-1), ry*ys + sty + r * (ys-1))]
    texture_image = Image.new('RGBA', (rx, ry))
    texture_image.putdata(selected_pixels)
    texture_image = texture_image.rotate(90)
    texture_image = texture_image.transpose(Image.FLIP_TOP_BOTTOM)
    texture_image.save('test.png')


if __name__ == '__main__':
    main()
